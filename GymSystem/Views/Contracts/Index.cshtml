@{
    ViewData["Title"] = "合約表";
    var memberId = User.FindFirst(System.Security.Claims.ClaimTypes.NameIdentifier)?.Value;
    var isTrainer = User.IsInRole("B");
}

<div class="card shadow-sm" style="border-radius: 12px; border: none;">
    <div class="card-header bg-light d-flex justify-content-between align-items-center" style="border-top-left-radius: 12px; border-top-right-radius: 12px; padding: 1.25rem;">
        <h4 class="mb-0">
            <i class="bi bi-file-earmark-text me-2 text-success"></i>
            合約表
        </h4>
        <a asp-action="Index" asp-controller="Home" class="btn btn-sm btn-outline-secondary">
            <i class="bi bi-arrow-left me-1"></i> 返回首頁
        </a>
    </div>
    <div class="card-body p-4">
        <div class="d-flex justify-content-between mb-3">
            <div>
                @if (User.IsInRole("C"))
                {
                    <a asp-action="Create" class="btn btn-success">
                        <i class="bi bi-plus-lg me-1"></i> 新增合約
                    </a>
                }
                @if (isTrainer)
                {
                    <button type="button" class="btn btn-info ms-2" id="toggleShowAllBtn">
                        <i class="bi bi-people me-1"></i> 顯示全部
                    </button>
                }
                <button type="button" class="btn btn-warning ms-2" id="toggleActiveBtn">
                    <i class="bi bi-check-circle me-1"></i> 已畢業
                </button>
            </div>
            <div class="d-flex gap-2">
                <button type="button" class="btn btn-outline-dark" data-bs-toggle="modal" data-bs-target="#tableFilterModal">
                    <i class="bi bi-funnel me-1"></i> 進階篩選
                </button>
                <button type="button" class="btn btn-outline-secondary" id="clearFilterBtn">
                    <i class="bi bi-x-circle me-1"></i> 取消篩選
                </button>
            </div>
        </div>

        <div class="table-responsive">
            <table class="table table-bordered table-hover align-middle" id="listTable">
                <thead class="table-light">
                    <tr>
                        <th class="d-none d-md-table-cell">簽約人</th>
                        <th class="d-none d-md-table-cell">簽約日期</th>
                        <th class="d-none d-md-table-cell">結束日期</th>
                        <th>課程類型</th>
                        <th class="d-none d-md-table-cell">付款方式</th>
                        <th>會員</th>
                        <th class="d-none d-md-table-cell">承辦人</th>
                        <th class="d-none d-md-table-cell">教練</th>
                        <th>堂數</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    <!-- AJAX 動態填入 -->
                </tbody>
            </table>
        </div>
        <nav aria-label="合約分頁" class="mt-3">
            <ul class="pagination justify-content-center" id="pagination">
                <!-- AJAX 動態填入 -->
            </ul>
        </nav>
    </div>
</div>

@await Html.PartialAsync("_TableFilterModal", "listTable")

@section Scripts {
    <script>
        const apiUrl = '/api/ContractsApi/contracts';
        let pageIndex = 1;
        const pageSize = 10;
        let memberId = '@memberId';
        let totalCount = 0;
        let showAll = true; // 控制 graduate
        let trainerId = ""; // 教練ID參數
        const isTrainer = @((isTrainer).ToString().ToLower());
        let showAllContracts = true; // 控制 trainerId

        function fetchContracts() {
            const tbody = $('#listTable tbody');
            tbody.empty();
            tbody.append('<tr><td colspan="10" class="text-center text-secondary">資料讀取中...</td></tr>');


            // graduate: showAll true=1, false=0
            const graduate = showAll ? 1 : 0;
            $.ajax({
                url: apiUrl,
                type: 'GET',
                data: { memberId, pageIndex, pageSize, trainerId, graduate },
                success: function (res) {
                    const contracts = res.contracts || [];
                    totalCount = res.totalCount || 0;
                    renderTable(contracts);
                    renderPagination(totalCount);
                }
            });
        }

        function renderTable(contracts) {
            const tbody = $('#listTable tbody');
            tbody.empty();
            if (contracts.length === 0) {
                tbody.append('<tr><td colspan="10" class="text-center">查無資料</td></tr>');
                return;
            }
            contracts.forEach(item => {
                tbody.append(`
                    <tr data-used="${item.usedClassCount ?? 0}" data-max="${item.maxClassCount ?? 0}">
                        <td class="d-none d-md-table-cell">${item.signer ?? ''}</td>
                        <td class="d-none d-md-table-cell">${item.signDate ? item.signDate.substring(0, 10) : ''}</td>
                        <td class="d-none d-md-table-cell">${item.endDate ? item.endDate.substring(0, 10) : ''}</td>
                        <td>${item.classType ?? ''}</td>
                        <td class="d-none d-md-table-cell">${item.payType ?? ''}</td>
                        <td>${item.member?.memberName ?? ''}</td>
                        <td class="d-none d-md-table-cell">${item.handler?.memberName ?? ''}</td>
                        <td class="d-none d-md-table-cell">${item.trainer?.memberName ?? ''}</td>
                        <td>${item.usedClassCount ?? 0} / ${item.maxClassCount ?? 0}</td>
                        <td>
                            <a href="/Contracts/Details/${item.contractID}" class="btn btn-outline-primary btn-sm">
                                <i class="bi bi-search me-1"></i> 合約內容
                            </a>
                        </td>
                    </tr>
                `);
            });
            applyFilters();
        }

        function renderPagination(totalCount) {
            const totalPages = Math.ceil(totalCount / pageSize);
            const pagination = $('#pagination');
            pagination.empty();
            if (totalPages <= 1) return;

            const maxButtons = 7;
            let start = Math.max(1, pageIndex - 3);
            let end = Math.min(totalPages, pageIndex + 3);

            if (pageIndex <= 4) {
                start = 1;
                end = Math.min(totalPages, maxButtons);
            } else if (pageIndex > totalPages - 4) {
                start = Math.max(1, totalPages - maxButtons + 1);
                end = totalPages;
            }

            // 上一頁
            pagination.append(`
                <li class="page-item ${pageIndex === 1 ? 'disabled' : ''}">
                    <a class="page-link" href="javascript:void(0)" onclick="goToPage(${pageIndex - 1})">上一頁</a>
                </li>
            `);

            // 第一頁
            if (start > 1) {
                pagination.append(`
                    <li class="page-item"><a class="page-link" href="javascript:void(0)" onclick="goToPage(1)">1</a></li>
                `);
                if (start > 2) {
                    pagination.append(`<li class="page-item disabled"><span class="page-link">...</span></li>`);
                }
            }

            // 中間頁碼
            for (let i = start; i <= end; i++) {
                pagination.append(`
                    <li class="page-item ${i === pageIndex ? 'active' : ''}">
                        <a class="page-link" href="javascript:void(0)" onclick="goToPage(${i})">${i}</a>
                    </li>
                `);
            }

            // 最後一頁
            if (end < totalPages) {
                if (end < totalPages - 1) {
                    pagination.append(`<li class="page-item disabled"><span class="page-link">...</span></li>`);
                }
                pagination.append(`
                    <li class="page-item"><a class="page-link" href="javascript:void(0)" onclick="goToPage(${totalPages})">${totalPages}</a></li>
                `);
            }

            // 下一頁
            pagination.append(`
                <li class="page-item ${pageIndex === totalPages ? 'disabled' : ''}">
                    <a class="page-link" href="javascript:void(0)" onclick="goToPage(${pageIndex + 1})">下一頁</a>
                </li>
            `);
        }

        window.goToPage = function (i) {
            if (i < 1 || i > Math.ceil(totalCount / pageSize)) return;
            pageIndex = i;
            fetchContracts();
        };

        // 顯示全部/只顯示自己切換
        $(document).ready(function () {
            if (isTrainer) {
                const btn = $('#toggleShowAllBtn');
                btn.on('click', function () {
                    showAllContracts = !showAllContracts;
                    if (showAllContracts) {
                        btn.html('<i class="bi bi-people me-1"></i> 顯示全部');
                        trainerId = "";
                    } else {
                        btn.html('<i class="bi bi-person me-1"></i> 顯示自己');
                        trainerId = memberId;
                    }
                    fetchContracts();
                });
            }
            fetchContracts();
        });

        // 已畢業切換
        $('#toggleActiveBtn').on('click', function () {
            showAll = !showAll;
            if (showAll) {
                $(this).removeClass('btn-outline-warning').addClass('btn-warning');
            } else {
                $(this).removeClass('btn-warning').addClass('btn-outline-warning');
            }
            fetchContracts();
        });

        function applyFilters() {
            $('#listTable tbody tr').each(function () {
                let used = parseInt($(this).data('used'), 10);
                let max = parseInt($(this).data('max'), 10);
                let show = true;

                // 已完結篩選
                if (!showAll && used >= max) {
                    show = false;
                }

                // 進階篩選（假設你有一個 isAdvancedMatch(tr) 方法）
                if (typeof isAdvancedMatch === 'function' && !isAdvancedMatch(this)) {
                    show = false;
                }

                $(this).toggle(show);
            });
        }
    </script>
    <script src="~/js/tableFiliter.js"></script>
    <script src="~/js/tableSort.js"></script>
}